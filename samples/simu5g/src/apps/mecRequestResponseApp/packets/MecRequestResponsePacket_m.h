//
// Generated file, do not edit! Created by opp_msgtool 6.1 from apps/mecRequestResponseApp/packets/MecRequestResponsePacket.msg.
//

#ifndef __SIMU5G_MECREQUESTRESPONSEPACKET_M_H
#define __SIMU5G_MECREQUESTRESPONSEPACKET_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0601
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif


namespace simu5g {

class MecRequestResponsePacket;

}  // namespace simu5g

#include "inet/common/INETDefs_m.h" // import inet.common.INETDefs

#include "inet/common/packet/chunk/Chunk_m.h" // import inet.common.packet.chunk.Chunk

#include "common/LteCommon_m.h" // import common.LteCommon


namespace simu5g {

/**
 * Class generated from <tt>apps/mecRequestResponseApp/packets/MecRequestResponsePacket.msg:22</tt> by opp_msgtool.
 * <pre>
 * //
 * // Packet used by the ~MecRequestRequestPacket and ~MecRequestResponsePacket modules.
 * //
 * class MecRequestResponsePacket extends inet::FieldsChunk
 * {
 *     unsigned int sno;
 * 
 *     double reqTimestamp;
 *     double respTimestamp;
 * 
 *     MacNodeId bsId;
 *     int appId;
 * 
 *     string srcAddress;
 *     int srcPort;
 *     string destAddress;
 *     int destPort;
 * }
 * </pre>
 */
class MecRequestResponsePacket : public ::inet::FieldsChunk
{
  protected:
    unsigned int sno = 0;
    double reqTimestamp = 0;
    double respTimestamp = 0;
    MacNodeId bsId;
    int appId = 0;
    ::omnetpp::opp_string srcAddress;
    int srcPort = 0;
    ::omnetpp::opp_string destAddress;
    int destPort = 0;

  private:
    void copy(const MecRequestResponsePacket& other);

  protected:
    bool operator==(const MecRequestResponsePacket&) = delete;

  public:
    MecRequestResponsePacket();
    MecRequestResponsePacket(const MecRequestResponsePacket& other);
    virtual ~MecRequestResponsePacket();
    MecRequestResponsePacket& operator=(const MecRequestResponsePacket& other);
    virtual MecRequestResponsePacket *dup() const override {return new MecRequestResponsePacket(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual unsigned int getSno() const;
    virtual void setSno(unsigned int sno);

    virtual double getReqTimestamp() const;
    virtual void setReqTimestamp(double reqTimestamp);

    virtual double getRespTimestamp() const;
    virtual void setRespTimestamp(double respTimestamp);

    virtual const MacNodeId& getBsId() const;
    virtual MacNodeId& getBsIdForUpdate() { handleChange();return const_cast<MacNodeId&>(const_cast<MecRequestResponsePacket*>(this)->getBsId());}
    virtual void setBsId(const MacNodeId& bsId);

    virtual int getAppId() const;
    virtual void setAppId(int appId);

    virtual const char * getSrcAddress() const;
    virtual void setSrcAddress(const char * srcAddress);

    virtual int getSrcPort() const;
    virtual void setSrcPort(int srcPort);

    virtual const char * getDestAddress() const;
    virtual void setDestAddress(const char * destAddress);

    virtual int getDestPort() const;
    virtual void setDestPort(int destPort);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const MecRequestResponsePacket& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, MecRequestResponsePacket& obj) {obj.parsimUnpack(b);}


}  // namespace simu5g


namespace omnetpp {

template<> inline simu5g::MecRequestResponsePacket *fromAnyPtr(any_ptr ptr) { return check_and_cast<simu5g::MecRequestResponsePacket*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __SIMU5G_MECREQUESTRESPONSEPACKET_M_H

