//
// Generated file, do not edit! Created by opp_msgtool 6.1 from apps/mec/RnisTestApp/packets/RnisTestAppPacket.msg.
//

#ifndef __SIMU5G_RNISTESTAPPPACKET_M_H
#define __SIMU5G_RNISTESTAPPPACKET_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0601
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif


namespace simu5g {

class RnisTestAppPacket;
class RnisTestAppStartPacket;
class RnisTestAppStopPacket;
class RnisTestAppInfoPacket;

}  // namespace simu5g

#include "nodes/mec/MECPlatform/MECPackets_m.h" // import nodes.mec.MECPlatform.MECPackets

// cplusplus {{
#include "nodes/mec/utils/httpUtils/json.hpp"
// }}


namespace simu5g {

/**
 * Class generated from <tt>apps/mec/RnisTestApp/packets/RnisTestAppPacket.msg:31</tt> by opp_msgtool.
 * <pre>
 * class RnisTestAppPacket extends MECPacket
 * {
 * }
 * </pre>
 */
class RnisTestAppPacket : public ::simu5g::MECPacket
{
  protected:

  private:
    void copy(const RnisTestAppPacket& other);

  protected:
    bool operator==(const RnisTestAppPacket&) = delete;

  public:
    RnisTestAppPacket();
    RnisTestAppPacket(const RnisTestAppPacket& other);
    virtual ~RnisTestAppPacket();
    RnisTestAppPacket& operator=(const RnisTestAppPacket& other);
    virtual RnisTestAppPacket *dup() const override {return new RnisTestAppPacket(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const RnisTestAppPacket& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, RnisTestAppPacket& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>apps/mec/RnisTestApp/packets/RnisTestAppPacket.msg:35</tt> by opp_msgtool.
 * <pre>
 * class RnisTestAppStartPacket extends RnisTestAppPacket
 * {
 *     double period;   // determines the RNIS querying period
 * }
 * </pre>
 */
class RnisTestAppStartPacket : public ::simu5g::RnisTestAppPacket
{
  protected:
    double period = 0;

  private:
    void copy(const RnisTestAppStartPacket& other);

  protected:
    bool operator==(const RnisTestAppStartPacket&) = delete;

  public:
    RnisTestAppStartPacket();
    RnisTestAppStartPacket(const RnisTestAppStartPacket& other);
    virtual ~RnisTestAppStartPacket();
    RnisTestAppStartPacket& operator=(const RnisTestAppStartPacket& other);
    virtual RnisTestAppStartPacket *dup() const override {return new RnisTestAppStartPacket(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual double getPeriod() const;
    virtual void setPeriod(double period);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const RnisTestAppStartPacket& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, RnisTestAppStartPacket& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>apps/mec/RnisTestApp/packets/RnisTestAppPacket.msg:40</tt> by opp_msgtool.
 * <pre>
 * class RnisTestAppStopPacket extends RnisTestAppPacket
 * {
 * }
 * </pre>
 */
class RnisTestAppStopPacket : public ::simu5g::RnisTestAppPacket
{
  protected:

  private:
    void copy(const RnisTestAppStopPacket& other);

  protected:
    bool operator==(const RnisTestAppStopPacket&) = delete;

  public:
    RnisTestAppStopPacket();
    RnisTestAppStopPacket(const RnisTestAppStopPacket& other);
    virtual ~RnisTestAppStopPacket();
    RnisTestAppStopPacket& operator=(const RnisTestAppStopPacket& other);
    virtual RnisTestAppStopPacket *dup() const override {return new RnisTestAppStopPacket(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const RnisTestAppStopPacket& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, RnisTestAppStopPacket& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>apps/mec/RnisTestApp/packets/RnisTestAppPacket.msg:44</tt> by opp_msgtool.
 * <pre>
 * class RnisTestAppInfoPacket extends RnisTestAppPacket
 * {
 *     nlohmann::json l2meas;
 * }
 * </pre>
 */
class RnisTestAppInfoPacket : public ::simu5g::RnisTestAppPacket
{
  protected:
    ::nlohmann::json l2meas;

  private:
    void copy(const RnisTestAppInfoPacket& other);

  protected:
    bool operator==(const RnisTestAppInfoPacket&) = delete;

  public:
    RnisTestAppInfoPacket();
    RnisTestAppInfoPacket(const RnisTestAppInfoPacket& other);
    virtual ~RnisTestAppInfoPacket();
    RnisTestAppInfoPacket& operator=(const RnisTestAppInfoPacket& other);
    virtual RnisTestAppInfoPacket *dup() const override {return new RnisTestAppInfoPacket(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual const ::nlohmann::json& getL2meas() const;
    virtual ::nlohmann::json& getL2measForUpdate() { handleChange();return const_cast<::nlohmann::json&>(const_cast<RnisTestAppInfoPacket*>(this)->getL2meas());}
    virtual void setL2meas(const ::nlohmann::json& l2meas);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const RnisTestAppInfoPacket& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, RnisTestAppInfoPacket& obj) {obj.parsimUnpack(b);}


}  // namespace simu5g


namespace omnetpp {

inline any_ptr toAnyPtr(const nlohmann::json *p) {if (auto obj = as_cObject(p)) return any_ptr(obj); else return any_ptr(p);}
template<> inline nlohmann::json *fromAnyPtr(any_ptr ptr) { return ptr.get<nlohmann::json>(); }
template<> inline simu5g::RnisTestAppPacket *fromAnyPtr(any_ptr ptr) { return check_and_cast<simu5g::RnisTestAppPacket*>(ptr.get<cObject>()); }
template<> inline simu5g::RnisTestAppStartPacket *fromAnyPtr(any_ptr ptr) { return check_and_cast<simu5g::RnisTestAppStartPacket*>(ptr.get<cObject>()); }
template<> inline simu5g::RnisTestAppStopPacket *fromAnyPtr(any_ptr ptr) { return check_and_cast<simu5g::RnisTestAppStopPacket*>(ptr.get<cObject>()); }
template<> inline simu5g::RnisTestAppInfoPacket *fromAnyPtr(any_ptr ptr) { return check_and_cast<simu5g::RnisTestAppInfoPacket*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __SIMU5G_RNISTESTAPPPACKET_M_H

